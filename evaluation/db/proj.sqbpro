<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="/home/alexander/Documents/Projects/git-new/Minizinc/minibrass/evaluation/db/results.db"/><window><current_tab id="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="1290"/><expanded_item id="0" parent="-1"/><expanded_item id="1" parent="-1"/><expanded_item id="2" parent="-1"/><expanded_item id="3" parent="-1"/></tab_structure><tab_browse><current_table name="Config"/><default_encoding codec=""/><browsetable_info data="AAAAAQAAAAwAQwBvAG4AZgBpAGcAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////"/></tab_browse><tab_sql><sql name="instanceCount.sql">SELECT Instance FROM PvsData Group By Instance</sql><sql name="query-native-vs-strictbab-overhead.sql">Drop View PvsData; Drop View NativeData; Drop View PvsNativeSummary;

Create View If not Exists PvsData as 
SELECT problem, instance, SolverName, SolverId, round(elapsedSecs,2) as elapsedSecs, Objective, Optimally, cf.ID as ConfigId FROM 
JobResult jr INNER JOIN Config cf ON jr.ConfigId = cf.ID 
INNER JOIN Solver sv ON jr.SolverId = sv.ID 
where SPD = 1 and MIF = 1 and SearchType = 1 and Solved = 1
order by problem, instance, elapsedSecs, solverId ;

Create View If not Exists NativeData as 
SELECT problem, instance, SolverName, SolverId, round(elapsedSecs,2) as elapsedSecs, Objective, Optimally, cf.ID as ConfigId FROM 
JobResult jr INNER JOIN Config cf ON jr.ConfigId = cf.ID 
INNER JOIN Solver sv ON jr.SolverId = sv.ID 
where SPD = 1 and MIF = 1 and SearchType = 3 
order by problem, instance, elapsedSecs, solverId ;

Create View If not Exists PvsNativeSummary as 
Select pd.Problem, pd.Instance, pd.SolverName, pd.elapsedSecs as &quot;Smyth-Elapsed&quot;, pd.Objective as &quot;Smyth-Obj&quot;, nd.elapsedSecs as &quot;Weights-Elapsed&quot;, nd.Objective as &quot;Weights-Objective&quot; ,
       pd.elapsedSecs - nd.elapsedSecs as &quot;AbsOverhead&quot;, pd.elapsedSecs / nd.elapsedSecs as &quot;RelOverhead&quot;

from PvsData pd, NativeData nd
where pd.Problem = nd.Problem and 
      pd.Instance = nd.Instance and 
	  pd.SolverId = nd.SolverId
order by pd.problem, pd.instance, pd.solverName;

Select Problem, SolverName,
 AVG(AbsOverhead), AVG(RelOverhead) 
FROM PvsNativeSummary
GROUP By Problem,SolverName</sql><sql name="query-native-solver-comparison_spd-tpd.sql">
Drop View NativeDataCompSpd; Drop View NativeDataCompTpd; Drop View NativeSpd; Drop View NativeTpd;

Create View If not Exists NativeDataCompSpd as 
SELECT problem, instance, SolverName, SolverId, round(elapsedSecs,2) as elapsedSecs, Objective, Optimally, cf.ID as ConfigId, solved FROM 
JobResult jr INNER JOIN Config cf ON jr.ConfigId = cf.ID 
INNER JOIN Solver sv ON jr.SolverId = sv.ID 
where SPD = 1 and MIF = 0 and SearchType = 3 AND cf.PropRed = 0
order by problem, instance, objective asc, elapsedSecs, solverId ;

Create View If not Exists NativeDataCompTpd as 
SELECT problem, instance, SolverName, SolverId, round(elapsedSecs,2) as elapsedSecs, Objective, Optimally, cf.ID as ConfigId, solved FROM 
JobResult jr INNER JOIN Config cf ON jr.ConfigId = cf.ID 
INNER JOIN Solver sv ON jr.SolverId = sv.ID 
where SPD = 0 and MIF = 0 and SearchType = 3 AND cf.PropRed = 0
order by problem, instance, objective asc, elapsedSecs, solverId ;

CREATE VIEW IF not Exists NativeSpd as 
SELECT problem, instance, solverName, solverId, elapsedSecs, Objective, Optimally, Solved FROM NativeDataCompSpd;

CREATE VIEW IF not Exists NativeTpd as 
SELECT problem, instance, solverName, solverId, elapsedSecs as elapsedSecsTpd, Objective as ObjectiveTpd, Optimally as OptimallyTPD, Solved as SolvedTPD FROM NativeDataCompTpd;

Select nspd.problem, nspd.instance, nspd.solvername, elapsedSecs as elapsedSecsSpd, Objective as ObjectiveSpd, Optimally as OptimallySpd, Solved as SolvedSpd, 
       elapsedSecsTpd, objectiveTpd, solvedTpd
From
NativeSpd nspd, NativeTpd ntpd
Where nspd.problem = ntpd.problem and nspd.instance = ntpd.instance and nspd.solverId = ntpd.solverId;</sql><sql name="query-native-solver-comparison.sql">
Drop View NativeDataComp;
Create View If not Exists NativeDataComp as 
SELECT problem, instance, SolverName, SolverId, round(elapsedSecs,2) as elapsedSecs, Objective, Optimally, cf.ID as ConfigId, solved FROM 
JobResult jr INNER JOIN Config cf ON jr.ConfigId = cf.ID 
INNER JOIN Solver sv ON jr.SolverId = sv.ID 
where SPD = 1 and MIF = 0 and SearchType = 3 AND cf.PropRed = 0
order by problem, instance, objective asc, elapsedSecs, solverId ;

Select problem, solverId, SolverName, AVG(elapsedSecs), AVG(Objective), AVG(solved) From NativeDataComp
Group By problem, solverId, SolverName
Order by problem, AVG(elapsedSecs), AVG(objective)</sql><current_tab id="3"/></tab_sql></sqlb_project>
