type FreePVS = PVSType<mset[maxOccurrences] of 1..maxP> = 
  params { 
    array[int, 1..2] of 1..nScs: crEdges;
    int: maxP;
    int: maxPerSc;
    int: maxOccurrences :: default('mbr.nScs * mbr.maxPerSc');
  } in 
  instantiates with "../mbr_types/free-pvs-type.mzn" {
    times -> multiset_union;
    is_worse -> isSmythWorse;
    top -> {};
  };
    

PVS: fp = new FreePVS("fp") {
   soft-constraint c1: 'embed(x == 4, 3, 3)';
   soft-constraint c1c: 'embed(x > 1, 3, 3)';
   soft-constraint c2: 'embed(x in {1,3,4}, 2, 3)';
   soft-constraint c3: 'embed(x <= 3, 1, 3)';
   
   crEdges : '[| 2, 1 | 3, 1 |]';
   maxP: '3' ;
   maxPerSc : '2';
}; 

solve fp;
