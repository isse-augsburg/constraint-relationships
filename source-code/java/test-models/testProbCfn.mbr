% A minimalistic probabilistic CSP

type ProbCostFunctionNetwork = PVSType<float> = 
  params {
    array[1..nScs] of float: probs :: default('1.0');
  } in  
  instantiates with "../mbr_types/probabilistic_type.mzn" {
    times -> prob_weighted_sum;
    is_worse -> is_worse_prob_cost; 
    top -> k;
 };
  
      
PVS: pz1 = new ProbCostFunctionNetwork("pz1") {
   soft-constraint c1: 'geqErr(s1 + s2, 8)' :: probs('0.4');
   soft-constraint c2: 'leqErr(s1 + s2, 7)' :: probs('0.3');
}; 

solve pz1;
